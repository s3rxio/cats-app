version: "3.7"
services:
  proxy:
    container_name: cat-pinterest-proxy
    image: nginx:1.24-alpine-slim
    volumes:
      - type: bind
        source: ./nginx.conf
        target: /etc/nginx/nginx.conf
        read_only: true
    depends_on:
      cat-pinterest-api:
        condition: service_started
    ports:
      - "8080:80"
    networks:
      - cat-pinterest-net

  cat-pinterest-api:
    container_name: cat-pinterest-api
    image: cat-pinterest-api
    build:
      context: ./api/
    networks:
      - cat-pinterest-net
    develop:
      watch:
        - path: ./api/src/
          action: rebuild
    environment:
      NODE_ENV: prod
      SECRET: ${SECRET} # i know
      SALT_ROUNDS: ${SALT_ROUNDS} # also i know 
      DB_HOST: cat-pinterest-api-pg
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: "1"
      DB_NAME: support_lk_db
    depends_on:
      cat-pinterest-api-pg:
        condition: service_healthy

  cat-pinterest-front:
    container_name: cat-pinterest-front
    image: cat-pinterest-front
    build:
      context: ./front/
      args:
        NODE_ENV: prod
        VITE_CATS_API_KEY: ${CATS_API_KEY} # i know...
    networks:
      - cat-pinterest-net
    develop:
      watch:
        - path: ./front/src
          action: rebuild

  cat-pinterest-api-pg:
    container_name: cat-pinterest-api-pg
    image: postgres:14
    networks:
      - cat-pinterest-net
    environment:
      POSTGRES_PASSWORD: 1
      POSTGRES_USER: postgres
      POSTGRES_DB: support_lk_db
      PGDATA: /var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 10

networks:
  cat-pinterest-net:
